---
import { getCollection } from "astro:content";
import PageLayout from "@layouts/PageLayout.astro";
import TopLayout from "@layouts/TopLayout.astro";
import BottomLayout from "@layouts/BottomLayout.astro";
import { WORK } from "@consts";
import { t } from "@lib/utils";

const collection = await getCollection("work");

collection.sort(
  (a, b) =>
    new Date(b.data.dateStart).getTime() - new Date(a.data.dateStart).getTime()
);

const work = await Promise.all(
  collection.map(async (item) => {
    const { Content } = await item.render();
    return { ...item, Content };
  })
);

function formatWorkDate(input: Date | string) {
  if (typeof input === "string") return input;

  const month = input.toLocaleDateString("en-US", {
    month: "short",
  });

  const year = new Date(input).getFullYear();
  return `${month} ${year}`;
}
---

<PageLayout title={WORK.TITLE} description={WORK.DESCRIPTION}>
  <TopLayout>
    <div class="animate page-heading">
      {WORK.TITLE}
    </div>
  </TopLayout>
  <BottomLayout>
    <ul>
      {
        work.map((entry) => (
          <li class="animate border-b border-black/10 dark:border-white/25 mt-4 py-8 first-of-type:mt-0 first-of-type:pt-0 last-of-type:border-none">
            <div class="text-sm uppercase mb-4">
              {formatWorkDate(entry.data.dateStart)} -{" "}
              {formatWorkDate(entry.data.dateEnd)}
            </div>
            <div class="flex flex-col md:flex-row md:items-baseline justify-between gap-1 mb-1">
              <div class="text-black dark:text-white font-semibold">
                {entry.data.company}
              </div>
              <div class="text-sm font-semibold">{entry.data.role}</div>
            </div>
            <div class="text-sm mb-5 flex flex-wrap items-center gap-x-4 gap-y-2 text-black/75 dark:text-white/75">
              {entry.data.location && (
                <div class="flex items-center">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    class="size-4 mr-1.5 inline-block stroke-current"
                    viewBox="0 0 24 24"
                    fill="none"
                    stroke-width="2"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                  >
                    <path d="M12 21s-8-4.5-8-11a8 8 0 0 1 16 0c0 6.5-8 11-8 11z" />
                    <circle cx="12" cy="10" r="3" />
                  </svg>
                  <span>{entry.data.location}</span>
                </div>
              )}
              {entry.data.employmentType && (
                <div class="flex items-center">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    class="size-4 mr-1.5 inline-block stroke-current"
                    viewBox="0 0 24 24"
                    fill="none"
                    stroke-width="2"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                  >
                    <rect x="2" y="7" width="20" height="14" rx="2" ry="2" />
                    <path d="M16 21V5a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16" />
                  </svg>
                  <span>{entry.data.employmentType}</span>
                </div>
              )}
              {entry.data.workMode && (
                <div class="flex items-center">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    class="size-4 mr-1.5 inline-block stroke-current"
                    viewBox="0 0 24 24"
                    fill="none"
                    stroke-width="2"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                  >
                    <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2" />
                    <circle cx="12" cy="7" r="4" />
                  </svg>
                  <span>{entry.data.workMode}</span>
                </div>
              )}
            </div>
            <article class="prose dark:prose-invert">
              <entry.Content />
            </article>
          </li>
        ))
      }
    </ul>
  </BottomLayout>
</PageLayout>
