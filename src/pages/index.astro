---
import { getCollection } from "astro:content"
import PageLayout from "@layouts/PageLayout.astro"
import ArrowCard from "@components/ArrowCard"
import { SITE, SOCIALS } from "@consts"
import { t } from "@lib/utils"

const PREVIEW_POSTS = 10

const posts = (await getCollection("blog"))
  .filter(post => !post.data.draft)
  .sort((a, b) => b.data.date.getTime() - a.data.date.getTime())
  .slice(0,PREVIEW_POSTS)

/*
const projects = (await getCollection("projects"))
  .filter(project => !project.data.draft)
  .sort((a, b) => b.data.date.getTime() - a.data.date.getTime())
  .slice(0,PREVIEW_PROJECTS)

const stack = [
  { 
    text: "JavaScript", 
    icon: "javascript", 
    href: "https://www.javascript.com" 
  },
  { 
    text: "TypeScript", 
    icon: "typescript", 
    href: "https://www.typescriptlang.org" 
  },
  { 
    text: "React", 
    icon: "react", 
    href: "https://react.dev" 
  },
  { 
    text: "Angular", 
    icon: "angular", 
    href: "https://angular.io" 
  },
  { 
    text: "Java", 
    icon: "java", 
    href: "https://www.java.com" 
  },
  { 
    text: "Azure", 
    icon: "azure", 
    href: "https://azure.microsoft.com" 
  },
  { 
    text: "Google Cloud", 
    icon: "gcp", 
    href: "https://cloud.google.com" 
  },
  { 
    text: "Tailwind", 
    icon: "tailwind", 
    href: "https://tailwindcss.com" 
  },
]
*/
---

<PageLayout title="Home" description={SITE.DESCRIPTION}>
  <!-- VANTA Fog Animation Background -->
  <section id="vanta-hero" class="relative h-screen w-full overflow-hidden">
    <!-- Animated Background Container -->
    <div id="vanta-fog-bg" class="absolute inset-0 w-full h-full"></div>
    
    <!-- Content Container -->
    <div class="relative z-10 h-full w-full flex items-center">
      <div class="container mx-auto px-8 md:px-12 lg:px-16 flex items-center justify-center h-full">
        <div class="w-full max-w-4xl text-center md:text-left">
          <h1 class="text-4xl sm:text-4xl md:text-5xl lg:text-6xl font-bold text-black dark:text-white mb-6 leading-tight">
            Lukas Niessen
          </h1>
          <p class="text-lg md:text-xl lg:text-2xl text-black/90 dark:text-white/90 max-w-3xl leading-relaxed mx-auto md:mx-0">
            {t("home.about")}
          </p>
          <div class="mt-8 flex justify-center md:justify-start">
            <a
              id="scroll-to-next"
              aria-label="Scroll to content section"
              class="group inline-flex items-center gap-2 px-4 py-2 text-black dark:text-white border border-gray-400/70 dark:border-gray-600/50 rounded-lg hover:border-warmAccent-primary dark:hover:border-warmAccent-secondary hover:text-warmAccent-primary dark:hover:text-warmAccent-secondary transition-all duration-300 ease-in-out cursor-pointer"
            >
              <span class="text-base font-medium">Explore</span>
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="16"
                height="16"
                viewBox="0 0 24 24"
                fill="none"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"
                class="stroke-current transition-transform duration-300 ease-in-out group-hover:translate-y-0.5"
              >
                <polyline points="6 9 12 15 18 9"></polyline>
              </svg>
            </a>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Scripts for VANTA animation -->
  <script is:inline src="/js/three.r134.min.js"></script>
  <script is:inline src="/js/vanta.fog.min.js"></script>
  <script is:inline>
    document.addEventListener('DOMContentLoaded', function() {
      // Function to initialize VANTA with appropriate colors based on theme
      function initVanta() {
        // Destroy existing VANTA instance if it exists
        if (window.VANTA_INSTANCE) {
          window.VANTA_INSTANCE.destroy();
        }
        
        // Check if dark mode is active by looking at the HTML class
        const isDarkMode = document.documentElement.classList.contains('dark');
        
        if (isDarkMode) {
          // Dark mode colors
          window.VANTA_INSTANCE = VANTA.FOG({
            el: "#vanta-fog-bg",
           mouseControls: true,
  touchControls: true,
  gyroControls: false,
  minHeight: 200.00,
  minWidth: 200.00,
  highlightColor: 0x7f86e8,
  midtoneColor: 0x00a3ff,
  lowlightColor: 0x222222,
  baseColor: 0x0,
  blurFactor: 0.90,
  speed: 1.50,
  zoom: 0.10
          });
        } else {
          // Light mode colors
          window.VANTA_INSTANCE = VANTA.FOG({
            el: "#vanta-fog-bg",
            mouseControls: true,
  touchControls: true,
  gyroControls: false,
  minHeight: 200.00,
  minWidth: 200.00,
  highlightColor: 0x7f86e8,
  midtoneColor: 0x00a3ff,
  lowlightColor: 0x222222,
  baseColor: 0xffffff,
  blurFactor: 0.90,
  speed: 1.50,
  zoom: 0.10
          });
        }
      }

      // Initialize VANTA
      initVanta();

      // Listen for theme changes
      const observer = new MutationObserver(function(mutations) {
        mutations.forEach(function(mutation) {
          if (mutation.attributeName === 'class') {
            initVanta();
          }
        });
      });

      observer.observe(document.documentElement, {
        attributes: true,
        attributeFilter: ['class']
      });

      // Handle scroll button
      const scrollButton = document.getElementById('scroll-to-next');
      if (scrollButton) {
        scrollButton.addEventListener('click', function(e) {
          e.preventDefault();
          const targetSection = document.getElementById('archunitts');
          if (targetSection) {
            // Use smooth scrolling with proper options
            targetSection.scrollIntoView({ 
              behavior: 'smooth',
              block: 'start'
            });
          }
        });
      }
    });
  </script>

  <div class="relative bg-warmBg-light dark:bg-warmBg-dark">
    <div class="mx-auto max-w-screen-sm p-5 space-y-24 pb-16 mt-12">

      <!-- ArchUnitTS Section -->
      <section class="animate" id="archunitts">
        <div class="space-y-4">
          <p class="font-semibold text-black dark:text-white text-xl">
            ArchUnitTS
          </p>
          <p class="text-black/80 dark:text-white/80">
            I created and maintain ArchUnitTS, a software architecture testing library. It helps enforce architecture rules, detect circular dependencies, and ensure coding standards in TypeScript and JavaScript projects. Measured by GitHub stars, ArchUnitTS is the #1 architecture testing library for TypeScript projects.
          </p>          <div class="flex flex-wrap gap-3 mt-4">
            <a 
              href="/projects/archunits" 
              class="inline-block px-4 py-2 bg-warmAccent-primary text-white rounded-md hover:opacity-80 transition-all text-sm"
            >
              Learn More
            </a>
            <a 
              href="https://github.com/LukasNiessen/ArchUnitTS" 
              target="_blank"
              class="inline-block px-4 py-2 border border-warmAccent-primary text-warmAccent-primary rounded-md hover:bg-warmAccent-primary hover:bg-opacity-10 transition-all text-sm"
            >
              View on GitHub
            </a>
          </div>
        </div>
      </section>

      <!-- Blog Preview Section -->
      <section id="recent-posts" class="animate">
        <div class="space-y-4">
          <div class="flex justify-between">
            <p class="font-semibold text-black dark:text-white">
              {t("home.recent.posts")}
            </p>
            <a href="/blog" class="w-fit col-span-3 group flex gap-1 items-center underline decoration-[.5px] decoration-black/25 dark:decoration-white/50 hover:decoration-black dark:hover:decoration-white text-black dark:text-white underline-offset-2 blend">
              <span class="text-black/75 dark:text-white/75 group-hover:text-black group-hover:dark:text-white blend">
                {t("home.all.posts")}
              </span>
            </a>
          </div>          <ul class="space-y-4">
            {posts.map((post) => (
              <li>
                <ArrowCard entry={post} />
              </li>
            ))}
          </ul>
          <div class="flex justify-center mt-8">
            <a 
              href="/blog" 
              class="inline-block px-6 py-3 bg-warmAccent-primary text-white rounded-md hover:opacity-80 transition-all text-sm font-medium"
            >
              See all articles
            </a>
          </div>
        </div>
      </section>

      <!-- Project Preview Section -->
      <!--
      <section class="animate">
        <div class="space-y-4">
          <div class="flex justify-between">
            <p class="font-semibold text-black dark:text-white">
              {t("home.recent.projects")}
            </p>
            <a href="/projects" class="w-fit col-span-3 group flex gap-1 items-center underline decoration-[.5px] decoration-black/25 dark:decoration-white/50 hover:decoration-black dark:hover:decoration-white text-black dark:text-white underline-offset-2 blend">
              <span class="text-black/75 dark:text-white/75 group-hover:text-black group-hover:dark:text-white blend">
                {t("home.all.projects")}
              </span>
            </a>
          </div>
          <ul class="space-y-4">
            {projects.map((project) => (
              <li>
                <ArrowCard entry={project} />
              </li>
            ))}
          </ul>
        </div>
      </section>
      -->      

      <!-- Contact Section -->
      <section class="animate">
        <div class="flex flex-col sm:flex-row gap-6 items-center">
          <div class="w-full sm:w-2/3 order-2 sm:order-1">
            <p class="font-semibold text-black dark:text-white text-xl">
              {t("home.connect")}
            </p>
            <p class="mt-4">
              {t("home.interests")}
            </p>
            <div class="grid grid-cols-4 gap-y-2 mt-5 auto-cols-min">
              {SOCIALS.map(social => (
                <div class="col-span-1 flex items-center gap-1">
                  <span class="whitespace-nowrap truncate">
                    {social.NAME}
                  </span>
                </div>
                <div class="col-span-3 truncate">
                  <a href={social.HREF} target="_blank" class="w-fit col-span-3 group flex gap-1 items-center underline decoration-[.5px] decoration-black/25 dark:decoration-white/50 hover:decoration-black dark:hover:decoration-white text-black dark:text-white underline-offset-2 blend">
                    <span class="text-black/75 dark:text-white/75 group-hover:text-black group-hover:dark:text-white blend">
                      {social.TEXT}
                    </span>
                  </a>
                </div>
              ))}
            </div>
          </div>
          <div class="w-full sm:w-1/3 flex justify-center order-1 sm:order-2 hidden sm:flex">
            <img 
              src="/portrait.avif" 
              alt="Lukas Niessen - Software Architect and Full Stack Developer" 
              class="size-40 rounded-xl object-cover shadow-md"
            />
          </div>
        </div>
      </section>
    </div>
  </div>
</PageLayout>
